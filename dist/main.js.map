{"version":3,"sources":["../src/main.js"],"names":["path","__dirname","process","env","NODE_ENV","then","app","listen","PORT","log","debug","catch","err","error","exit"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEA,oBAAO;AAACA,EAAAA,IAAI,EAAE,mBAAQC,SAAR,EAAoB,WAAUC,OAAO,CAACC,GAAR,CAAYC,QAAS,EAAnD;AAAP,CAAP;AAEA,2BAAcC,IAAd,CACIC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAWL,OAAO,CAACC,GAAR,CAAYK,IAAvB,EAA6B,MAAMC,SAAIC,KAAJ,CAAW,uBAAsBR,OAAO,CAACC,GAAR,CAAYK,IAAK,EAAlD,CAAnC,CADX,EAEEG,KAFF,CAEQC,GAAG,IAAI;AACXH,WAAII,KAAJ,CAAU,6BAAV,EAAyCD,GAAzC;;AACAV,EAAAA,OAAO,CAACY,IAAR,CAAa,CAAb;AACH,CALD","sourcesContent":["import { config } from \"dotenv\";\r\nimport { resolve } from \"path\";\r\nimport { startServer } from \"./lib/server\";\r\nimport { log } from \"./lib/log\";\r\n\r\nconfig({path: resolve(__dirname, `../.env.${process.env.NODE_ENV}`)})\r\n\r\nstartServer().then(\r\n    app => app.listen(process.env.PORT, () => log.debug(`Server listening on ${process.env.PORT}`))\r\n).catch(err => {\r\n    log.error('Server failed to initialize', err)\r\n    process.exit(1)\r\n})"],"file":"main.js"}