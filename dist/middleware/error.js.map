{"version":3,"sources":["../../src/middleware/error.js"],"names":["errorHandler","ctx","next","error","status","statusCode","body","toJSON","message","log"],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,eAAeA,YAAf,CAA4BC,GAA5B,EAAiCC,IAAjC,EAAsC;AACzC,MAAI;AACA,UAAMA,IAAI,EAAV;AACH,GAFD,CAEE,OAAOC,KAAP,EAAc;AACZF,IAAAA,GAAG,CAACG,MAAJ,GAAaD,KAAK,CAACE,UAAN,IAAoB,GAAjC;AACAJ,IAAAA,GAAG,CAACK,IAAJ,GAAWH,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACI,MAAN,EAAf;AAAiCC,MAAAA,OAAO,EAAEL,KAAK,CAACK;AAAhD,OAA4DL,KAA5D,CAAX;;AACAM,aAAIN,KAAJ,CAAU,kBAAV,EAA8BA,KAA9B;AACH;AACJ","sourcesContent":["import { log } from \"../lib/log\";\r\n\r\nexport async function errorHandler(ctx, next){\r\n    try {\r\n        await next();\r\n    } catch (error) {\r\n        ctx.status = error.statusCode || 500\r\n        ctx.body = error.toJSON ? error.toJSON() : {message: error.message, ...error}\r\n        log.error('Error in request', error)\r\n    }\r\n}"],"file":"error.js"}